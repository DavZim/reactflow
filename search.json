[{"path":"https://davzim.github.io/reactflow/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 reactflow authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://davzim.github.io/reactflow/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Zimmermann-Kollenda. Author, maintainer.","code":""},{"path":"https://davzim.github.io/reactflow/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zimmermann-Kollenda D (2024). reactflow: Create beautiful, customizable, interactive diagrams based React Flow. R package version 0.0.1https://github.com/davzim/reactflow/ https://davzim.github.io/reactflow/, https://github.com/davzim/reactflow/ https://davzim.github.io/reactflow/.","code":"@Manual{,   title = {reactflow: Create beautiful, customizable, and interactive diagrams based on React Flow},   author = {David Zimmermann-Kollenda},   year = {2024},   note = {R package version 0.0.1https://github.com/davzim/reactflow/ https://davzim.github.io/reactflow/},   url = {https://github.com/davzim/reactflow/ https://davzim.github.io/reactflow/}, }"},{"path":"https://davzim.github.io/reactflow/index.html","id":"reactflow","dir":"","previous_headings":"","what":"Create beautiful, customizable, and interactive diagrams based on React Flow","title":"Create beautiful, customizable, and interactive diagrams based on React Flow","text":"experimental R package use @xyflow/react R shiny. working moment!","code":""},{"path":"https://davzim.github.io/reactflow/index.html","id":"development","dir":"","previous_headings":"","what":"Development","title":"Create beautiful, customizable, and interactive diagrams based on React Flow","text":"Clone repository","code":"system(\"yarn install\") system(\"yarn run webpack\")  devtools::document() devtools::install(quick = TRUE)  # start a shiny app that should display a flow shiny::runApp()"},{"path":"https://davzim.github.io/reactflow/reference/background.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Background Component for a ReactFlow — background","title":"Creates a Background Component for a ReactFlow — background","text":"Note background standalone component, child ReactFlow","code":""},{"path":"https://davzim.github.io/reactflow/reference/background.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Background Component for a ReactFlow — background","text":"","code":"background(...)"},{"path":"https://davzim.github.io/reactflow/reference/background.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Creates a Background Component for a ReactFlow — background","text":"https://reactflow.dev/api-reference/components/background","code":""},{"path":"https://davzim.github.io/reactflow/reference/background.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Background Component for a ReactFlow — background","text":"... arguments passed element, see official source ","code":""},{"path":"https://davzim.github.io/reactflow/reference/background.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Background Component for a ReactFlow — background","text":"","code":"nodes <- list(   list(id = \"1\", position = list(x = 0, y = 0), data = list(label = \"1\"),        type = \"input\"),   list(id = \"2\", position = list(x = 50, y = 100), data = list(label = \"2\")),   list(id = \"3\", position = list(x = 100, y = 200), data = list(label = \"3\"),        type = \"output\") ) edges <- list(  list(id = \"e1-2\", source = \"1\", target = \"2\"),  list(id = \"e2-3\", source = \"2\", target = \"3\"),  list(id = \"e1-3\", source = \"1\", target = \"3\") )  # basic background reactflow(nodes, edges, background())  {\"x\":{\"tag\":{\"name\":\"ReactFlow\",\"attribs\":{\"nodes\":[{\"id\":\"1\",\"position\":{\"x\":0,\"y\":0},\"data\":{\"label\":\"1\"},\"type\":\"input\"},{\"id\":\"2\",\"position\":{\"x\":50,\"y\":100},\"data\":{\"label\":\"2\"}},{\"id\":\"3\",\"position\":{\"x\":100,\"y\":200},\"data\":{\"label\":\"3\"},\"type\":\"output\"}],\"edges\":[{\"id\":\"e1-2\",\"source\":\"1\",\"target\":\"2\"},{\"id\":\"e2-3\",\"source\":\"2\",\"target\":\"3\"},{\"id\":\"e1-3\",\"source\":\"1\",\"target\":\"3\"}],\"allow_edge_connection\":true,\"use_dagre\":false,\"dagre_direction\":\"LR\",\"dagre_config\":{\"nodeWidth\":200,\"nodeHeight\":40}},\"children\":[{\"name\":\"Background\",\"attribs\":[],\"children\":[]}]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]} # apply custom styling reactflow(nodes, edges, background(   color = \"lightgreen\",   size = 15,   variant = \"cross\", # see also \"dots\" and \"lines\"   gap = 50,   lineWidth = 2 ))  {\"x\":{\"tag\":{\"name\":\"ReactFlow\",\"attribs\":{\"nodes\":[{\"id\":\"1\",\"position\":{\"x\":0,\"y\":0},\"data\":{\"label\":\"1\"},\"type\":\"input\"},{\"id\":\"2\",\"position\":{\"x\":50,\"y\":100},\"data\":{\"label\":\"2\"}},{\"id\":\"3\",\"position\":{\"x\":100,\"y\":200},\"data\":{\"label\":\"3\"},\"type\":\"output\"}],\"edges\":[{\"id\":\"e1-2\",\"source\":\"1\",\"target\":\"2\"},{\"id\":\"e2-3\",\"source\":\"2\",\"target\":\"3\"},{\"id\":\"e1-3\",\"source\":\"1\",\"target\":\"3\"}],\"allow_edge_connection\":true,\"use_dagre\":false,\"dagre_direction\":\"LR\",\"dagre_config\":{\"nodeWidth\":200,\"nodeHeight\":40}},\"children\":[{\"name\":\"Background\",\"attribs\":{\"color\":\"lightgreen\",\"size\":15,\"variant\":\"cross\",\"gap\":50,\"lineWidth\":2},\"children\":[]}]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]} # add two backgrounds reactflow(   nodes,   edges,   background(     id = \"1\",     color = \"#f1f1f1\",     variant = \"lines\",     gap = 10   ),   background(     id = \"2\",     color = \"#cccccc\",     variant = \"lines\"   ) )  {\"x\":{\"tag\":{\"name\":\"ReactFlow\",\"attribs\":{\"nodes\":[{\"id\":\"1\",\"position\":{\"x\":0,\"y\":0},\"data\":{\"label\":\"1\"},\"type\":\"input\"},{\"id\":\"2\",\"position\":{\"x\":50,\"y\":100},\"data\":{\"label\":\"2\"}},{\"id\":\"3\",\"position\":{\"x\":100,\"y\":200},\"data\":{\"label\":\"3\"},\"type\":\"output\"}],\"edges\":[{\"id\":\"e1-2\",\"source\":\"1\",\"target\":\"2\"},{\"id\":\"e2-3\",\"source\":\"2\",\"target\":\"3\"},{\"id\":\"e1-3\",\"source\":\"1\",\"target\":\"3\"}],\"allow_edge_connection\":true,\"use_dagre\":false,\"dagre_direction\":\"LR\",\"dagre_config\":{\"nodeWidth\":200,\"nodeHeight\":40}},\"children\":[{\"name\":\"Background\",\"attribs\":{\"id\":\"1\",\"color\":\"#f1f1f1\",\"variant\":\"lines\",\"gap\":10},\"children\":[]},{\"name\":\"Background\",\"attribs\":{\"id\":\"2\",\"color\":\"#cccccc\",\"variant\":\"lines\"},\"children\":[]}]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://davzim.github.io/reactflow/reference/controls.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Control Component for a ReactFlow — controls","title":"Creates a Control Component for a ReactFlow — controls","text":"Note control component standalone component, child ReactFlow","code":""},{"path":"https://davzim.github.io/reactflow/reference/controls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Control Component for a ReactFlow — controls","text":"","code":"controls(...)"},{"path":"https://davzim.github.io/reactflow/reference/controls.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Creates a Control Component for a ReactFlow — controls","text":"https://reactflow.dev/api-reference/components/controls","code":""},{"path":"https://davzim.github.io/reactflow/reference/controls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Control Component for a ReactFlow — controls","text":"... arguments passed element, see official source ","code":""},{"path":"https://davzim.github.io/reactflow/reference/controls.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Control Component for a ReactFlow — controls","text":"","code":"nodes <- list(   list(id = \"1\", position = list(x = 0, y = 0), data = list(label = \"1\"),        type = \"input\"),   list(id = \"2\", position = list(x = 50, y = 100), data = list(label = \"2\")),   list(id = \"3\", position = list(x = 100, y = 200), data = list(label = \"3\"),        type = \"output\") ) edges <- list(  list(id = \"e1-2\", source = \"1\", target = \"2\"),  list(id = \"e2-3\", source = \"2\", target = \"3\"),  list(id = \"e1-3\", source = \"1\", target = \"3\") )  # basic control reactflow(nodes, edges, controls())  {\"x\":{\"tag\":{\"name\":\"ReactFlow\",\"attribs\":{\"nodes\":[{\"id\":\"1\",\"position\":{\"x\":0,\"y\":0},\"data\":{\"label\":\"1\"},\"type\":\"input\"},{\"id\":\"2\",\"position\":{\"x\":50,\"y\":100},\"data\":{\"label\":\"2\"}},{\"id\":\"3\",\"position\":{\"x\":100,\"y\":200},\"data\":{\"label\":\"3\"},\"type\":\"output\"}],\"edges\":[{\"id\":\"e1-2\",\"source\":\"1\",\"target\":\"2\"},{\"id\":\"e2-3\",\"source\":\"2\",\"target\":\"3\"},{\"id\":\"e1-3\",\"source\":\"1\",\"target\":\"3\"}],\"allow_edge_connection\":true,\"use_dagre\":false,\"dagre_direction\":\"LR\",\"dagre_config\":{\"nodeWidth\":200,\"nodeHeight\":40}},\"children\":[{\"name\":\"Controls\",\"attribs\":[],\"children\":[]}]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]} # apply custom styling reactflow(nodes, edges, controls(   position = \"top-right\",   orientation = \"horizontal\",   # show values can be turned off, on by default   showZoom = TRUE,   showFitView = FALSE,   showIntereactive = TRUE ))  {\"x\":{\"tag\":{\"name\":\"ReactFlow\",\"attribs\":{\"nodes\":[{\"id\":\"1\",\"position\":{\"x\":0,\"y\":0},\"data\":{\"label\":\"1\"},\"type\":\"input\"},{\"id\":\"2\",\"position\":{\"x\":50,\"y\":100},\"data\":{\"label\":\"2\"}},{\"id\":\"3\",\"position\":{\"x\":100,\"y\":200},\"data\":{\"label\":\"3\"},\"type\":\"output\"}],\"edges\":[{\"id\":\"e1-2\",\"source\":\"1\",\"target\":\"2\"},{\"id\":\"e2-3\",\"source\":\"2\",\"target\":\"3\"},{\"id\":\"e1-3\",\"source\":\"1\",\"target\":\"3\"}],\"allow_edge_connection\":true,\"use_dagre\":false,\"dagre_direction\":\"LR\",\"dagre_config\":{\"nodeWidth\":200,\"nodeHeight\":40}},\"children\":[{\"name\":\"Controls\",\"attribs\":{\"position\":\"top-right\",\"orientation\":\"horizontal\",\"showZoom\":true,\"showFitView\":false,\"showIntereactive\":true},\"children\":[]}]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://davzim.github.io/reactflow/reference/mini_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Creates a Mini Map Component for a ReactFlow — mini_map","title":"Creates a Mini Map Component for a ReactFlow — mini_map","text":"Note mini map standalone component, child ReactFlow","code":""},{"path":"https://davzim.github.io/reactflow/reference/mini_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Creates a Mini Map Component for a ReactFlow — mini_map","text":"","code":"mini_map(...)"},{"path":"https://davzim.github.io/reactflow/reference/mini_map.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Creates a Mini Map Component for a ReactFlow — mini_map","text":"https://reactflow.dev/api-reference/components/minimap","code":""},{"path":"https://davzim.github.io/reactflow/reference/mini_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Creates a Mini Map Component for a ReactFlow — mini_map","text":"... arguments passed component, see official source ","code":""},{"path":"https://davzim.github.io/reactflow/reference/mini_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Creates a Mini Map Component for a ReactFlow — mini_map","text":"","code":"nodes <- list(   list(id = \"1\", position = list(x = 0, y = 0), data = list(label = \"1\"),        type = \"input\"),   list(id = \"2\", position = list(x = 50, y = 100), data = list(label = \"2\")),   list(id = \"3\", position = list(x = 100, y = 200), data = list(label = \"3\"),        type = \"output\") ) edges <- list(  list(id = \"e1-2\", source = \"1\", target = \"2\"),  list(id = \"e2-3\", source = \"2\", target = \"3\"),  list(id = \"e1-3\", source = \"1\", target = \"3\") )  # basic mini map reactflow(nodes, edges, mini_map())  {\"x\":{\"tag\":{\"name\":\"ReactFlow\",\"attribs\":{\"nodes\":[{\"id\":\"1\",\"position\":{\"x\":0,\"y\":0},\"data\":{\"label\":\"1\"},\"type\":\"input\"},{\"id\":\"2\",\"position\":{\"x\":50,\"y\":100},\"data\":{\"label\":\"2\"}},{\"id\":\"3\",\"position\":{\"x\":100,\"y\":200},\"data\":{\"label\":\"3\"},\"type\":\"output\"}],\"edges\":[{\"id\":\"e1-2\",\"source\":\"1\",\"target\":\"2\"},{\"id\":\"e2-3\",\"source\":\"2\",\"target\":\"3\"},{\"id\":\"e1-3\",\"source\":\"1\",\"target\":\"3\"}],\"allow_edge_connection\":true,\"use_dagre\":false,\"dagre_direction\":\"LR\",\"dagre_config\":{\"nodeWidth\":200,\"nodeHeight\":40}},\"children\":[{\"name\":\"MiniMap\",\"attribs\":[],\"children\":[]}]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]} # add pan and zoom function to mini map reactflow(   nodes,   edges,   mini_map(pannable = TRUE, zoomable = TRUE, nodeColor = \"coral\") )  {\"x\":{\"tag\":{\"name\":\"ReactFlow\",\"attribs\":{\"nodes\":[{\"id\":\"1\",\"position\":{\"x\":0,\"y\":0},\"data\":{\"label\":\"1\"},\"type\":\"input\"},{\"id\":\"2\",\"position\":{\"x\":50,\"y\":100},\"data\":{\"label\":\"2\"}},{\"id\":\"3\",\"position\":{\"x\":100,\"y\":200},\"data\":{\"label\":\"3\"},\"type\":\"output\"}],\"edges\":[{\"id\":\"e1-2\",\"source\":\"1\",\"target\":\"2\"},{\"id\":\"e2-3\",\"source\":\"2\",\"target\":\"3\"},{\"id\":\"e1-3\",\"source\":\"1\",\"target\":\"3\"}],\"allow_edge_connection\":true,\"use_dagre\":false,\"dagre_direction\":\"LR\",\"dagre_config\":{\"nodeWidth\":200,\"nodeHeight\":40}},\"children\":[{\"name\":\"MiniMap\",\"attribs\":{\"pannable\":true,\"zoomable\":true,\"nodeColor\":\"coral\"},\"children\":[]}]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]} # provide a function for nodeColor node_color <- JS(\"(node) => {   if (node.type === 'input') return 'lightblue'   if (node.id === '2') return 'lightgreen'   return 'coral' }\") reactflow(   nodes,   edges,   mini_map(nodeColor = node_color) )  {\"x\":{\"tag\":{\"name\":\"ReactFlow\",\"attribs\":{\"nodes\":[{\"id\":\"1\",\"position\":{\"x\":0,\"y\":0},\"data\":{\"label\":\"1\"},\"type\":\"input\"},{\"id\":\"2\",\"position\":{\"x\":50,\"y\":100},\"data\":{\"label\":\"2\"}},{\"id\":\"3\",\"position\":{\"x\":100,\"y\":200},\"data\":{\"label\":\"3\"},\"type\":\"output\"}],\"edges\":[{\"id\":\"e1-2\",\"source\":\"1\",\"target\":\"2\"},{\"id\":\"e2-3\",\"source\":\"2\",\"target\":\"3\"},{\"id\":\"e1-3\",\"source\":\"1\",\"target\":\"3\"}],\"allow_edge_connection\":true,\"use_dagre\":false,\"dagre_direction\":\"LR\",\"dagre_config\":{\"nodeWidth\":200,\"nodeHeight\":40}},\"children\":[{\"name\":\"MiniMap\",\"attribs\":{\"nodeColor\":\"(node) => {\\n  if (node.type === 'input') return 'lightblue'\\n  if (node.id === '2') return 'lightgreen'\\n  return 'coral'\\n}\"},\"children\":[]}]},\"class\":\"reactR_markup\"},\"evals\":[\"tag.children.0.attribs.nodeColor\"],\"jsHooks\":[]} # add nodeComponent to style the nodes in the minimap node_component <- JS(reactR::babel_transform('  ({ x, y }) => {    return <circle cx={x} cy={y} r=\"25\" fill=\"coral\" />  } ')) #> Loading required namespace: V8 reactflow(   nodes,   edges,   mini_map(nodeComponent = node_component) )  {\"x\":{\"tag\":{\"name\":\"ReactFlow\",\"attribs\":{\"nodes\":[{\"id\":\"1\",\"position\":{\"x\":0,\"y\":0},\"data\":{\"label\":\"1\"},\"type\":\"input\"},{\"id\":\"2\",\"position\":{\"x\":50,\"y\":100},\"data\":{\"label\":\"2\"}},{\"id\":\"3\",\"position\":{\"x\":100,\"y\":200},\"data\":{\"label\":\"3\"},\"type\":\"output\"}],\"edges\":[{\"id\":\"e1-2\",\"source\":\"1\",\"target\":\"2\"},{\"id\":\"e2-3\",\"source\":\"2\",\"target\":\"3\"},{\"id\":\"e1-3\",\"source\":\"1\",\"target\":\"3\"}],\"allow_edge_connection\":true,\"use_dagre\":false,\"dagre_direction\":\"LR\",\"dagre_config\":{\"nodeWidth\":200,\"nodeHeight\":40}},\"children\":[{\"name\":\"MiniMap\",\"attribs\":{\"nodeComponent\":\"\\n(function (_ref) {\\n  var x = _ref.x,\\n      y = _ref.y;\\n\\n  return React.createElement(\\\"circle\\\", { cx: x, cy: y, r: \\\"25\\\", fill: \\\"coral\\\" });\\n});\"},\"children\":[]}]},\"class\":\"reactR_markup\"},\"evals\":[\"tag.children.0.attribs.nodeComponent\"],\"jsHooks\":[]}"},{"path":"https://davzim.github.io/reactflow/reference/reactflow-shiny.html","id":null,"dir":"Reference","previous_headings":"","what":"Shiny bindings for reactflow — reactflow-shiny","title":"Shiny bindings for reactflow — reactflow-shiny","text":"Output render functions using reactflow within Shiny applications interactive Rmd documents.","code":""},{"path":"https://davzim.github.io/reactflow/reference/reactflow-shiny.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Shiny bindings for reactflow — reactflow-shiny","text":"","code":"reactflowOutput(outputId, width = \"100%\", height = \"400px\")  renderReactflow(expr, env = parent.frame(), quoted = FALSE)"},{"path":"https://davzim.github.io/reactflow/reference/reactflow-shiny.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Shiny bindings for reactflow — reactflow-shiny","text":"outputId output variable read width, height Must valid CSS unit (like '100%', '400px', 'auto') number, coerced string 'px' appended. expr expression generates reactflow env environment evaluate expr. quoted expr quoted expression (quote())? useful want save expression variable.","code":""},{"path":[]},{"path":"https://davzim.github.io/reactflow/reference/reactflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A — reactflow","text":"","code":"reactflow(   nodes,   edges,   controls = NULL,   mini_map = NULL,   background = NULL,   allow_edge_connection = TRUE,   use_dagre = FALSE,   dagre_direction = c(\"LR\", \"TB\"),   dagre_config = list(nodeWidth = 200, nodeHeight = 40),   ...,   width = NULL,   height = NULL,   elementId = NULL )"},{"path":"https://davzim.github.io/reactflow/reference/reactflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A — reactflow","text":"... elements passed ReactFlow (see https://reactflow.dev/api-reference/react-flow) width height elementId message ","code":""},{"path":"https://davzim.github.io/reactflow/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. htmlwidgets JS","code":""},{"path":"https://davzim.github.io/reactflow/news/index.html","id":"reactflow-v01","dir":"Changelog","previous_headings":"","what":"reactflow v0.1","title":"reactflow v0.1","text":"[s] reactflow inside vignettes?! [ ] Vignettes different components: ReactFlow, MiniMap, Background, Controls, Node styling, Edge styling, shiny [s] nodeComponent MiniMap [ ] Shiny reactivity, redrawing issue [ ] pkgdown website [ ] Styled examples / showcases:","code":""}]
